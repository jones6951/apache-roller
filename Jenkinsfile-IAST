pipeline {
  agent any

  environment {
    PROJECT = 'apache-roller'
    VERSION = '1.0'
    BRANCH = 'main'
    SERVER_START = "mvn jetty:run -Djetty.http.port=9999"
    SERVER_STRING = "Started Jetty Server"
    SERVER_WORKINGDIR = "app"
  }

  stages {
    stage('Build') {
      steps {
        sh 'mvn -e clean package -DskipTests'
      }
    }

    stage('Set Up Environment') {
      steps {
        sh '''
          curl -s -L https://raw.githubusercontent.com/jones6951/io-scripts/main/serverStart.sh > /tmp/serverStart.sh
          curl -s -L https://raw.githubusercontent.com/jones6951/io-scripts/main/isNumeric.sh > /tmp/isNumeric.sh

          chmod +x /tmp/serverStart.sh
          chmod +x /tmp/isNumeric.sh
        '''
      }
    }

    stage ('IAST - Seeker') {
      steps {
        sh '''
          cd ${SERVER_WORKINGDIR}
          sh -c "$(wget --no-check-certificate 'https://poc42.seeker.synopsys.com/rest/api/latest/installers/agents/scripts/JAVA?osFamily=LINUX&downloadWith=wget&projectKey=roller&webServer=TOMCAT&flavor=DEFAULT&agentName=roller&accessToken=' -O -)"

          export SEEKER_PROJECT_VERSION=${VERSION}
          export SEEKER_AGENT_NAME=${AGENT}
          export MAVEN_OPTS=-javaagent:seeker/seeker-agent.jar

#         Start the server. Return value is either the PID of the running server process, or an error message
          serverMessage=$(/tmp/serverStart.sh --startCmd="${SERVER_START}" --startedString="${SERVER_STRING}" --project="${PROJECT}" --timeout="60s" &)
          if ( /tmp/isNumeric.sh $serverMessage); then
              echo "Running IAST Tests"

              selenium-side-runner -c "browserName=firefox moz:firefoxOptions.args=[-headless]" --output-directory=${WORKSPACE}/selenium/results ${WORKSPACE}/selenium/Apache-Roller.9999.side

              kill $serverMessage
          else
              echo $serverMessage
          fi
        '''
      }
    }

    stage('Clean Workspace') {
      steps {
        cleanWs()
      }
    }
  }
}
